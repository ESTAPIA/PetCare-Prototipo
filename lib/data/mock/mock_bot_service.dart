import '../models/chat_message.dart';

/// Servicio mock mejorado que genera respuestas del bot basadas en keywords
/// PASO E: Enhanced Bot Logic
/// - Detecci√≥n de contexto (edad, especie)
/// - Detecci√≥n de s√≠ntomas combinados
/// - Keywords expandidos por categor√≠a
/// - Preguntas de seguimiento
class MockBotService {
  /// Obtener respuesta del bot seg√∫n el texto del usuario
  static ChatMessage getResponse(String userMessage) {
    final msg = userMessage.toLowerCase();
    
    // 1. Detectar contexto del mensaje
    final context = _detectContext(msg);
    
    // 2. EMERGENCIAS (prioridad m√°xima)
    if (_isEmergency(msg)) {
      return _getEmergencyResponse();
    }
    
    // 3. S√çNTOMAS COMBINADOS (prioridad alta)
    final symptoms = _detectSymptoms(msg);
    if (symptoms.length >= 2) {
      return _getCombinedSymptomsResponse(symptoms, context);
    }
    
    // 4. CATEGOR√çAS ESPEC√çFICAS (mejoradas con contexto)
    if (_isAboutVaccines(msg)) {
      return _getVaccineResponse(context);
    }
    
    if (_isAboutNutrition(msg)) {
      return _getNutritionResponse(context);
    }
    
    if (_isAboutBehavior(msg)) {
      return _getBehaviorResponse(context);
    }
    
    if (_isAboutParasites(msg)) {
      return _getParasiteResponse(context);
    }
    
    if (_isAboutHygiene(msg)) {
      return _getHygieneResponse(context);
    }
    
    // S√≠ntoma individual: v√≥mito o diarrea
    if (symptoms.isNotEmpty) {
      return _getSingleSymptomResponse(symptoms.first, context);
    }
    
    // 5. RESPUESTA DEFAULT
    return _getDefaultResponse();
  }

  // ============================================
  // M√âTODOS DE DETECCI√ìN DE CONTEXTO
  // ============================================
  
  /// Detectar contexto del mensaje (edad, especie)
  static Map<String, dynamic> _detectContext(String msg) {
    return {
      'isPuppy': msg.contains('cachorro') || 
                 msg.contains('beb√©') || 
                 msg.contains('bebe') ||
                 msg.contains('peque√±o'),
      'isSenior': msg.contains('viejo') || 
                  msg.contains('anciano') || 
                  msg.contains('senior') ||
                  msg.contains('mayor'),
      'isDog': msg.contains('perro') || msg.contains('üê∂'),
      'isCat': msg.contains('gato') || msg.contains('üê±'),
    };
  }
  
  /// Detectar m√∫ltiples s√≠ntomas en el mensaje
  static Set<String> _detectSymptoms(String msg) {
    final symptoms = <String>{};
    
    if (msg.contains('vomito') || msg.contains('v√≥mito')) {
      symptoms.add('vomito');
    }
    if (msg.contains('diarrea')) {
      symptoms.add('diarrea');
    }
    if (msg.contains('fiebre') || msg.contains('caliente') || msg.contains('temperatura')) {
      symptoms.add('fiebre');
    }
    if (msg.contains('tos') || msg.contains('toser')) {
      symptoms.add('tos');
    }
    if (msg.contains('rascado') || msg.contains('rasca') || msg.contains('picaz√≥n')) {
      symptoms.add('picazon');
    }
    if (msg.contains('cojea') || msg.contains('renque') || msg.contains('pata')) {
      symptoms.add('cojera');
    }
    
    return symptoms;
  }

  // ============================================
  // M√âTODOS DE DETECCI√ìN POR CATEGOR√çA
  // ============================================
  
  static bool _isAboutVaccines(String msg) {
    return msg.contains('vacuna') || 
           msg.contains('vacunaci√≥n') ||
           msg.contains('vacunar') ||
           msg.contains('inmuniz') ||
           msg.contains('inyecci') ||
           msg.contains('dosis') ||
           msg.contains('refuerzo');
  }
  
  static bool _isAboutNutrition(String msg) {
    return msg.contains('comida') || 
           msg.contains('alimentaci√≥n') ||
           msg.contains('alimentacion') ||
           msg.contains('dieta') ||
           msg.contains('comer') ||
           msg.contains('peso') ||
           msg.contains('nutrici√≥n') ||
           msg.contains('nutricion') ||
           msg.contains('sobrepeso') ||
           msg.contains('delgado') ||
           msg.contains('gordo') ||
           msg.contains('croquetas');
  }
  
  static bool _isAboutBehavior(String msg) {
    return msg.contains('ladra') || 
           msg.contains('agresivo') ||
           msg.contains('estr√©s') ||
           msg.contains('estres') ||
           msg.contains('ansiedad') ||
           msg.contains('comportamiento') ||
           msg.contains('miedo') ||
           msg.contains('nervioso') ||
           msg.contains('hiperactivo') ||
           msg.contains('destructivo');
  }
  
  static bool _isAboutParasites(String msg) {
    return msg.contains('desparasit') || 
           msg.contains('par√°sito') ||
           msg.contains('parasito') ||
           msg.contains('gusanos') ||
           msg.contains('pulgas') ||
           msg.contains('garrapatas') ||
           msg.contains('lombrices') ||
           msg.contains('√°caros');
  }
  
  static bool _isAboutHygiene(String msg) {
    return msg.contains('ba√±o') || 
           msg.contains('ba√±ar') ||
           msg.contains('higiene') ||
           msg.contains('limpieza') ||
           msg.contains('shampoo') ||
           msg.contains('oler') ||
           msg.contains('mal olor');
  }

  // ============================================
  // M√âTODOS DE RESPUESTA POR CATEGOR√çA
  // ============================================
  
  static ChatMessage _getEmergencyResponse() {
    return ChatMessage.bot(
      '‚ö†Ô∏è ALERTA: Esto puede ser una EMERGENCIA m√©dica.\n\n'
      'Te recomiendo contactar a un veterinario INMEDIATAMENTE o acudir a una cl√≠nica de emergencias 24h.\n\n'
      'Mientras tanto:\n'
      '‚Ä¢ Mant√©n a tu mascota tranquila\n'
      '‚Ä¢ No le des comida ni agua\n'
      '‚Ä¢ Observa su respiraci√≥n\n'
      '‚Ä¢ Anota cualquier s√≠ntoma nuevo',
      actions: [
        MessageAction(
          label: 'Buscar veterinaria de emergencia',
          type: ActionType.searchVet,
          route: '/vets',
        ),
      ],
    );
  }
  
  static ChatMessage _getCombinedSymptomsResponse(Set<String> symptoms, Map<String, dynamic> context) {
    final symptomsList = symptoms.join(', ');
    final isPuppy = context['isPuppy'] as bool;
    
    String severity = '‚ö†Ô∏è IMPORTANTE';
    String recommendation = 'Te recomiendo consultar con un veterinario pronto.';
    
    if (symptoms.contains('vomito') && symptoms.contains('diarrea')) {
      severity = 'üö® URGENTE';
      recommendation = isPuppy 
          ? 'Los cachorros se deshidratan r√°pido. Consulta a un veterinario HOY.'
          : 'Esto puede causar deshidrataci√≥n. Consulta a un veterinario en las pr√≥ximas 12-24 horas.';
    }
    
    return ChatMessage.bot(
      '$severity: Detecto m√∫ltiples s√≠ntomas ($symptomsList).\n\n'
      '$recommendation\n\n'
      'Mientras tanto:\n'
      '‚Ä¢ Mant√©n agua fresca disponible\n'
      '‚Ä¢ No le des comida por 6-8 horas\n'
      '‚Ä¢ Observa si hay otros s√≠ntomas\n'
      '‚Ä¢ Anota desde cu√°ndo comenz√≥\n\n'
      '¬øLos s√≠ntomas comenzaron al mismo tiempo o gradualmente?',
      actions: [
        MessageAction(
          label: 'Buscar veterinaria',
          type: ActionType.searchVet,
          route: '/vets',
        ),
        MessageAction(
          label: 'Crear recordatorio de observaci√≥n',
          type: ActionType.createReminder,
          route: '/reminders/new',
        ),
      ],
    );
  }
  
  static ChatMessage _getSingleSymptomResponse(String symptom, Map<String, dynamic> context) {
    final isPuppy = context['isPuppy'] as bool;
    
    if (symptom == 'vomito' || symptom == 'diarrea') {
      final symptomName = symptom == 'vomito' ? 'v√≥mito' : 'diarrea';
      
      return ChatMessage.bot(
        'El $symptomName ocasional puede ser normal, pero hay que vigilarlo.\n\n'
        '${isPuppy ? "‚ö†Ô∏è Los cachorros son m√°s vulnerables a deshidrataci√≥n.\n\n" : ""}'
        'Consulta a un veterinario si:\n'
        '‚Ä¢ Persiste m√°s de 24 horas\n'
        '‚Ä¢ Hay sangre presente\n'
        '‚Ä¢ Tu mascota est√° deca√≠da\n'
        '‚Ä¢ No quiere beber agua\n\n'
        'Recomendaciones inmediatas:\n'
        '‚Ä¢ Ayuno de 12 horas (solo agua)\n'
        '‚Ä¢ Dieta blanda: pollo hervido con arroz\n'
        '‚Ä¢ Observa otros s√≠ntomas\n\n'
        '¬øHace cu√°nto tiempo comenz√≥?',
        actions: [
          MessageAction(
            label: 'Crear recordatorio de control',
            type: ActionType.createReminder,
            route: '/reminders/new',
          ),
          MessageAction(
            label: 'Buscar veterinaria',
            type: ActionType.searchVet,
            route: '/vets',
          ),
        ],
      );
    }
    
    return _getDefaultResponse();
  }
  
  static ChatMessage _getVaccineResponse(Map<String, dynamic> context) {
    final isPuppy = context['isPuppy'] as bool;
    final isDog = context['isDog'] as bool;
    final isCat = context['isCat'] as bool;
    
    if (isPuppy) {
      if (isDog) {
        return ChatMessage.bot(
          'Esquema de vacunaci√≥n para CACHORROS de perro:\n\n'
          '‚úì 6-8 semanas: Primera dosis (Parvovirus, Moquillo, Hepatitis)\n'
          '‚úì 10-12 semanas: Segunda dosis + Leptospirosis\n'
          '‚úì 14-16 semanas: Tercera dosis + Parainfluenza\n'
          '‚úì 16 semanas: Rabia (obligatoria)\n'
          '‚úì Refuerzo anual\n\n'
          'üí° Tip: No saques a pasear a tu cachorro hasta completar el esquema.\n\n'
          '¬øYa tiene alguna dosis aplicada?',
          actions: [
            MessageAction(
              label: 'Ver plan de vacunaci√≥n',
              type: ActionType.viewPlan,
              route: '/plan',
            ),
            MessageAction(
              label: 'Crear recordatorio',
              type: ActionType.createReminder,
              route: '/reminders/new',
            ),
          ],
        );
      } else if (isCat) {
        return ChatMessage.bot(
          'Esquema de vacunaci√≥n para CACHORROS de gato:\n\n'
          '‚úì 8 semanas: Primera dosis (Triple felina)\n'
          '‚úì 12 semanas: Segunda dosis + Leucemia\n'
          '‚úì 16 semanas: Rabia\n'
          '‚úì Refuerzo anual\n\n'
          'üí° Tip: Los gatos de interior tambi√©n necesitan vacunas.\n\n'
          '¬øTu gato sale al exterior?',
          actions: [
            MessageAction(
              label: 'Ver plan de vacunaci√≥n',
              type: ActionType.viewPlan,
              route: '/plan',
            ),
            MessageAction(
              label: 'Crear recordatorio',
              type: ActionType.createReminder,
              route: '/reminders/new',
            ),
          ],
        );
      }
    }
    
    // Respuesta general (adultos o sin especie detectada)
    return ChatMessage.bot(
      'El esquema de vacunaci√≥n var√≠a seg√∫n la edad:\n\n'
      'üê∂ Cachorros de perro:\n'
      '‚Ä¢ 6-8 semanas: Primera dosis\n'
      '‚Ä¢ 10-12 semanas: Segunda dosis\n'
      '‚Ä¢ 14-16 semanas: Tercera dosis\n'
      '‚Ä¢ Rabia: 16 semanas\n\n'
      'üê± Cachorros de gato:\n'
      '‚Ä¢ 8 semanas: Primera dosis\n'
      '‚Ä¢ 12 semanas: Segunda dosis\n'
      '‚Ä¢ Rabia: 16 semanas\n\n'
      'üîÑ Adultos: Refuerzos anuales\n\n'
      '¬øTu mascota es cachorro o adulto?',
      actions: [
        MessageAction(
          label: 'Ver plan de vacunaci√≥n',
          type: ActionType.viewPlan,
          route: '/plan',
        ),
        MessageAction(
          label: 'Crear recordatorio',
          type: ActionType.createReminder,
          route: '/reminders/new',
        ),
      ],
    );
  }
  
  static ChatMessage _getNutritionResponse(Map<String, dynamic> context) {
    final isPuppy = context['isPuppy'] as bool;
    final isSenior = context['isSenior'] as bool;
    
    if (isPuppy) {
      return ChatMessage.bot(
        'Alimentaci√≥n para CACHORROS:\n\n'
        'üçñ Frecuencia:\n'
        '‚Ä¢ Menores de 3 meses: 4 veces al d√≠a\n'
        '‚Ä¢ 3-6 meses: 3 veces al d√≠a\n'
        '‚Ä¢ 6-12 meses: 2 veces al d√≠a\n\n'
        '‚úì Usa alimento espec√≠fico para cachorros (m√°s prote√≠nas)\n'
        '‚úì Cantidad seg√∫n peso (ver empaque)\n'
        '‚úì Agua fresca siempre disponible\n\n'
        '‚ö†Ô∏è NO des: chocolate, cebolla, ajo, uvas, huesos cocidos\n\n'
        '¬øCu√°ntos meses tiene tu cachorro?',
        actions: [
          MessageAction(
            label: 'Crear recordatorio de alimentaci√≥n',
            type: ActionType.createReminder,
            route: '/reminders/new',
          ),
        ],
      );
    } else if (isSenior) {
      return ChatMessage.bot(
        'Alimentaci√≥n para mascotas SENIOR (7+ a√±os):\n\n'
        'ü•ò Recomendaciones:\n'
        '‚Ä¢ Alimento senior (menos calor√≠as, m√°s fibra)\n'
        '‚Ä¢ 2 comidas al d√≠a\n'
        '‚Ä¢ Porciones controladas (evitar sobrepeso)\n'
        '‚Ä¢ Considerar suplementos articulares\n\n'
        'üí° Tips:\n'
        '‚úì Agua fresca abundante\n'
        '‚úì Comida f√°cil de masticar\n'
        '‚úì Control de peso regular\n\n'
        '¬øTu mascota tiene alguna condici√≥n m√©dica?',
        actions: [
          MessageAction(
            label: 'Ver plan de cuidado senior',
            type: ActionType.viewPlan,
            route: '/plan',
          ),
          MessageAction(
            label: 'Crear recordatorio',
            type: ActionType.createReminder,
            route: '/reminders/new',
          ),
        ],
      );
    }
    
    // Respuesta general
    return ChatMessage.bot(
      'Alimentaci√≥n adecuada seg√∫n edad y tama√±o:\n\n'
      'üê∂ Perros:\n'
      '‚Ä¢ Cachorros: 3-4 veces al d√≠a\n'
      '‚Ä¢ Adultos: 2 veces al d√≠a\n'
      '‚Ä¢ Cantidad: seg√∫n peso (ver empaque)\n\n'
      'üê± Gatos:\n'
      '‚Ä¢ Adultos: 2-3 veces al d√≠a\n'
      '‚Ä¢ Acceso libre a agua fresca\n\n'
      '‚ö†Ô∏è Evita: chocolate, cebolla, ajo, uvas, huesos cocidos\n\n'
      '¬øNotas alg√∫n problema con su alimentaci√≥n actual?',
      actions: [
        MessageAction(
          label: 'Crear recordatorio de alimentaci√≥n',
          type: ActionType.createReminder,
          route: '/reminders/new',
        ),
      ],
    );
  }
  
  static ChatMessage _getBehaviorResponse(Map<String, dynamic> context) {
    final isPuppy = context['isPuppy'] as bool;
    
    return ChatMessage.bot(
      'Los problemas de comportamiento pueden tener varias causas:\n\n'
      '${isPuppy ? "üêï Para cachorros:\n‚Ä¢ Socializaci√≥n temprana es clave\n‚Ä¢ Entrenamiento positivo desde peque√±os\n\n" : ""}'
      'üìã Causas comunes:\n'
      '‚Ä¢ Falta de ejercicio f√≠sico\n'
      '‚Ä¢ Aburrimiento mental\n'
      '‚Ä¢ Ansiedad por separaci√≥n\n'
      '‚Ä¢ Cambios en el entorno\n'
      '‚Ä¢ Falta de socializaci√≥n\n\n'
      'Recomendaciones:\n'
      '‚úì Paseos regulares (m√≠n. 30-60 min)\n'
      '‚úì Juegos mentales (rompecabezas, entrenamiento)\n'
      '‚úì Rutina consistente\n'
      '‚úì Refuerzo positivo\n'
      '‚úì Considera un et√≥logo o entrenador profesional\n\n'
      '¬øCu√°ndo comenz√≥ el problema de comportamiento?',
      actions: [
        MessageAction(
          label: 'Buscar veterinaria/et√≥logo',
          type: ActionType.searchVet,
          route: '/vets',
        ),
      ],
    );
  }
  
  static ChatMessage _getParasiteResponse(Map<String, dynamic> context) {
    final isPuppy = context['isPuppy'] as bool;
    
    return ChatMessage.bot(
      'La desparasitaci√≥n es fundamental para la salud:\n\n'
      '${isPuppy ? "üêæ CACHORROS:\n‚Ä¢ Cada 15 d√≠as hasta los 3 meses\n‚Ä¢ Mensual de 3-6 meses\n‚Ä¢ Luego cada 3 meses\n\n" : ""}'
      'üê∂üê± Adultos:\n'
      '‚Ä¢ Interna: cada 3 meses\n'
      '‚Ä¢ Externa: mensual (pipetas o collar)\n\n'
      'üìã Tipos de par√°sitos:\n'
      '‚Ä¢ Internos: lombrices, tenias, giardias\n'
      '‚Ä¢ Externos: pulgas, garrapatas, √°caros\n\n'
      'üíä Tratamientos:\n'
      '‚úì Pastillas (par√°sitos internos)\n'
      '‚úì Pipetas (externos e internos)\n'
      '‚úì Collares antiparasitarios\n\n'
      '¬øCu√°ndo fue la √∫ltima desparasitaci√≥n?',
      actions: [
        MessageAction(
          label: 'Crear recordatorio',
          type: ActionType.createReminder,
          route: '/reminders/new',
        ),
        MessageAction(
          label: 'Ver plan de cuidado',
          type: ActionType.viewPlan,
          route: '/plan',
        ),
      ],
    );
  }
  
  static ChatMessage _getHygieneResponse(Map<String, dynamic> context) {
    final isDog = context['isDog'] as bool;
    final isCat = context['isCat'] as bool;
    
    if (isDog) {
      return ChatMessage.bot(
        'Higiene y ba√±o para PERROS:\n\n'
        'üöø Frecuencia:\n'
        '‚Ä¢ Cada 3-4 semanas (depende del pelo y actividad)\n'
        '‚Ä¢ Razas de pelo largo: cada 2-3 semanas\n'
        '‚Ä¢ Si se ensucia mucho: seg√∫n necesidad\n\n'
        '‚úì Consejos importantes:\n'
        '‚Ä¢ Usa shampoo espec√≠fico para perros\n'
        '‚Ä¢ Agua tibia (no caliente)\n'
        '‚Ä¢ Seca bien para evitar hongos\n'
        '‚Ä¢ Evita que entre agua en o√≠dos\n'
        '‚Ä¢ Cepilla antes y despu√©s del ba√±o\n\n'
        'ü¶∑ Otros cuidados:\n'
        '‚Ä¢ Limpieza de o√≠dos: semanal\n'
        '‚Ä¢ Corte de u√±as: mensual\n'
        '‚Ä¢ Cepillado dental: diario\n\n'
        '¬øTu perro tiene alg√∫n problema de piel?',
        actions: [
          MessageAction(
            label: 'Crear recordatorio de ba√±o',
            type: ActionType.createReminder,
            route: '/reminders/new',
          ),
        ],
      );
    } else if (isCat) {
      return ChatMessage.bot(
        'Higiene para GATOS:\n\n'
        'üê± Los gatos se asean solos, pero necesitan ayuda:\n\n'
        '‚úì Cepillado:\n'
        '‚Ä¢ Pelo corto: 1-2 veces por semana\n'
        '‚Ä¢ Pelo largo: diario\n\n'
        'üöø Ba√±o:\n'
        '‚Ä¢ Solo si es necesario (muy sucios)\n'
        '‚Ä¢ Cada 2-3 meses m√°ximo\n'
        '‚Ä¢ Usar shampoo espec√≠fico para gatos\n\n'
        'ü¶∑ Otros cuidados:\n'
        '‚Ä¢ Limpieza de o√≠dos: mensual\n'
        '‚Ä¢ Corte de u√±as: cada 2-3 semanas\n'
        '‚Ä¢ Cepillado dental: regular\n'
        '‚Ä¢ Limpieza de arenero: diario\n\n'
        '¬øTu gato tolera bien el cepillado?',
        actions: [
          MessageAction(
            label: 'Crear recordatorio de cuidados',
            type: ActionType.createReminder,
            route: '/reminders/new',
          ),
        ],
      );
    }
    
    // Respuesta general
    return ChatMessage.bot(
      'Cuidados de higiene b√°sicos:\n\n'
      'üê∂ Perros:\n'
      '‚Ä¢ Ba√±o: cada 3-4 semanas\n'
      '‚Ä¢ Cepillado: seg√∫n tipo de pelo\n\n'
      'üê± Gatos:\n'
      '‚Ä¢ Se asean solos\n'
      '‚Ä¢ Cepillado regular importante\n'
      '‚Ä¢ Ba√±o solo si es necesario\n\n'
      '‚úì Todos necesitan:\n'
      '‚Ä¢ Limpieza de o√≠dos\n'
      '‚Ä¢ Corte de u√±as\n'
      '‚Ä¢ Cuidado dental\n\n'
      '¬øQu√© cuidado espec√≠fico te interesa?',
      actions: [
        MessageAction(
          label: 'Crear recordatorio',
          type: ActionType.createReminder,
          route: '/reminders/new',
        ),
      ],
    );
  }
  
  static ChatMessage _getDefaultResponse() {
    return ChatMessage.bot(
      'Gracias por tu consulta. Te puedo ayudar con:\n\n'
      '‚Ä¢ Vacunas y desparasitaci√≥n\n'
      '‚Ä¢ Alimentaci√≥n y nutrici√≥n\n'
      '‚Ä¢ Comportamiento y entrenamiento\n'
      '‚Ä¢ Higiene y cuidados\n'
      '‚Ä¢ S√≠ntomas y salud\n\n'
      'üí° Tip: S√© espec√≠fico en tu pregunta, por ejemplo:\n'
      '"Mi cachorro tiene v√≥mito" o "¬øCu√°ndo vacunar a mi gato?"\n\n'
      '¬øEn qu√© m√°s puedo ayudarte?',
      actions: [
        MessageAction(
          label: 'Ver plan de cuidado',
          type: ActionType.viewPlan,
          route: '/plan',
        ),
        MessageAction(
          label: 'Buscar veterinaria',
          type: ActionType.searchVet,
          route: '/vets',
        ),
      ],
    );
  }

  // ============================================
  // DETECCI√ìN DE EMERGENCIAS (MEJORADA)
  // ============================================
  
  /// Detectar si el mensaje indica una emergencia
  static bool _isEmergency(String msg) {
    final emergencyKeywords = [
      'convulsi√≥n',
      'convulsion',
      'convulsiona',
      'sangrado',
      'sangre',
      'hemorragia',
      'atropellado',
      'golpe fuerte',
      'desmayo',
      'desmaya',
      'no respira',
      'respira mal',
      'asfixia',
      'envenenamiento',
      'intoxicaci√≥n',
      'intoxicacion',
      'veneno',
      'toxico',
      't√≥xico',
      'accidente',
      'herida grave',
      'fractura',
      'hueso roto',
      'no se mueve',
      'paralizado',
      'mordida grave',
    ];

    return emergencyKeywords.any((keyword) => msg.contains(keyword));
  }

  // ============================================
  // SUGERENCIAS R√ÅPIDAS
  // ============================================
  
  /// Obtener sugerencias r√°pidas para iniciar conversaci√≥n
  static List<String> getQuickSuggestions() {
    return [
      '¬øCu√°ndo debo vacunar a mi cachorro?',
      '¬øEs normal que mi gato duerma tanto?',
      'Recomendaciones de alimentaci√≥n',
      '¬øCada cu√°nto desparasitar?',
      'Mi perro tiene diarrea',
    ];
  }
}
